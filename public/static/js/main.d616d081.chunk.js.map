{"version":3,"sources":["helpers/sessionKontrol.js","Components/SiparisEkle.js","Components/SiparisListe.js","Sayfalar/Anasayfa.js","Sayfalar/Giris.js","Sayfalar/Siparisler.js","App.js","serviceWorker.js","index.js"],"names":["Promise","resolve","reject","axios","url","method","then","res","data","girisYapilmadi","catch","e","SiparisEkle","ekle","values","resetForm","props","siparisEkle","className","initialValues","adSoyad","telNo","toplamFiyat","aciklama","kargoAdresi","validationSchema","Yup","shape","required","max","onSubmit","handleChange","handleSubmit","errors","touched","setFieldTouched","TableRow","style","flexDirection","Object","keys","map","error","key","textAlign","color","TextField","flex","label","variant","onChange","value","type","autoComplete","name","multiline","rows","rowsMax","Button","onClick","Component","SiparisListe","state","sayfa","siparisSilToggle","silinecekSiparis","siparisSil","i","setState","ID","console","log","siparisleriCek","siparisler","siparisSilIptal","this","Table","stickyHeader","TableHead","TableCell","TableBody","preEnterPose","length","sort","a","b","aDate","Date","eklenmeTarihi","siparis","eklenmeZaman","toLocaleTimeString","toLocaleDateString","day","month","year","SiparisRow","toLocaleString","minimumFractionDigits","maximumFractionDigits","TableFooter","to","m","toplamSiparisMiktari","SiparisSilModalContainer","currentTarget","target","SiparisSilModal","posed","tr","init","opacity","enter","exit","span","beforeChildren","scale","Anasayfa","sessionKontrol","history","push","cikis","window","location","reload","document","title","React","Giris","girisYap","bilgiler","kullaniciAdi","kullaniciSifre","on","Siparisler","App","yuklendi","baslik","Card","render","RouteContainer","exact","path","component","div","x","delay","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d616d081.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default () => new Promise((resolve, reject) => {\r\n    axios({\r\n        url:\"/api/giriskontrol\",\r\n        method:\"get\",\r\n    })\r\n        .then(res => {\r\n            if(res.data.girisYapilmadi)\r\n                reject(false);\r\n            else\r\n                resolve(res.data)\r\n        })\r\n        .catch(e => reject(e));\r\n});","import React, {Component} from 'react';\r\nimport { TextField, Button, TableRow,  } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nclass SiparisEkle extends Component {\r\n\r\n    ekle = (values, resetForm) => {\r\n        this.props.siparisEkle(values);\r\n        resetForm();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"siparisEkle\"}>\r\n                <Formik\r\n                    initialValues={{\r\n                        adSoyad: \"\",\r\n                        telNo: \"\",\r\n                        toplamFiyat: \"\",\r\n                        aciklama: \"\",\r\n                        kargoAdresi: \"\",\r\n                    }}\r\n                    validationSchema={() => Yup.object().shape({\r\n                        adSoyad: Yup.string().required(\"(Ad Soyad) Bu alan zorunludur!\"),\r\n                        telNo: Yup.number(\"(Toplam Fiyat) Geçersiz veri türü girildi!\"),\r\n                        toplamFiyat: Yup.number(\"(Toplam Fiyat) Geçersiz veri türü girildi!\").required(\"(Toplam Fiyat) Bu alan zorunludur!\"),\r\n                        aciklama: Yup.string().max(255, \"(Açıklama) Maksimum karakter sayısı geçildi!\"),\r\n                        kargoAdresi: Yup.string().max(255, \"(Kargo Adresi) Maksimum karakter sayısı geçildi!\"),\r\n                    })}\r\n                    onSubmit={(values, {resetForm}) => this.ekle(values, resetForm)}\r\n                >\r\n                    {({values, handleChange, handleSubmit, errors, touched, setFieldTouched}) =>\r\n                        <form onSubmit={handleSubmit}>\r\n                            {\r\n                                errors &&\r\n                                    <TableRow style={{flexDirection:\"column\"}}>\r\n                                        {\r\n                                            Object.keys(errors).map((error, key) =>\r\n                                                touched[error] &&\r\n                                                    <h3 className={\"siparisEkleUyari\"} style={{textAlign:\"center\", color:\"red\"}} key={key}>{errors[error]}</h3>\r\n                                            )\r\n                                        }\r\n                                    </TableRow>\r\n                            }\r\n                            <TableRow>\r\n                                <TextField\r\n                                    style={{ flex:40 }}\r\n                                    className={\"siparisEkleInput\"}\r\n                                    label=\"Ad Soyad\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChange('adSoyad')}\r\n                                    value={values.adSoyad}\r\n                                />\r\n                                <div style={{flex:1}}>\r\n                                </div>\r\n                                <TextField\r\n                                    style={{ flex:40 }}\r\n                                    className={\"siparisEkleInput\"}\r\n                                    type={\"number\"}\r\n                                    label=\"Telefon Numarası\"\r\n                                    autoComplete={\"no\"}\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChange('telNo')}\r\n                                    value={values.telNo}\r\n                                />\r\n                                <div style={{flex:1}}>\r\n                                </div>\r\n                                <TextField\r\n                                    style={{ flex:40 }}\r\n                                    className={\"siparisEkleInput\"}\r\n                                    type={\"number\"}\r\n                                    label=\"Toplam Fiyat\"\r\n                                    autoComplete={\"no\"}\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChange('toplamFiyat')}\r\n                                    value={values.toplamFiyat}\r\n                                />\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TextField\r\n                                    style={{ flex:1 }}\r\n                                    className={\"siparisEkleInput\"}\r\n                                    name={\"aciklama\"}\r\n                                    label=\"Açıklama\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChange('aciklama')}\r\n                                    value={values.aciklama}\r\n                                    multiline={true}\r\n                                    rows={1}\r\n                                    rowsMax={4}\r\n                                />\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TextField\r\n                                    style={{ flex:1 }}\r\n                                    className={\"siparisEkleInput\"}\r\n                                    name={\"kargoAdresi\"}\r\n                                    label=\"Kargo Adresi\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChange('kargoAdresi')}\r\n                                    value={values.kargoAdresi}\r\n                                    multiline={true}\r\n                                    rows={1}\r\n                                    rowsMax={4}\r\n                                />\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <Button\r\n                                    onClick={handleSubmit}\r\n                                    style={{ flex:1 }}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <i className={\"fa fa-plus\"} />&nbsp;Ekle\r\n                                </Button>\r\n                            </TableRow>\r\n                        </form>\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SiparisEkle;","import React, {Component} from 'react';\r\nimport {Table, TableHead, TableBody, TableRow, TableCell, Button, TableFooter} from '@material-ui/core';\r\nimport posed, { PoseGroup } from \"react-pose\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nclass SiparisListe extends Component {\r\n\r\n    state = { /// pagination yapılacak\r\n        sayfa: 1,\r\n        siparisSilToggle:false,\r\n        silinecekSiparis: null\r\n    };\r\n\r\n    siparisSil = i => {\r\n        if(!this.state.siparisSilToggle){\r\n            const silinecekSiparis = this.props.siparisler[i];\r\n            this.setState({ siparisSilToggle: !this.state.siparisSilToggle, silinecekSiparis });\r\n        } else {\r\n            this.setState({siparisSilToggle: !this.state.siparisSilToggle, silinecekSiparis: null});\r\n            axios({\r\n                url:\"/api/siparis/sil/\"+this.state.silinecekSiparis.ID,\r\n                method:\"delete\"\r\n            })\r\n                .then(res => {\r\n                    console.log(\"sil \",res.data);\r\n                    this.props.siparisleriCek();\r\n                })\r\n                .catch(e => console.error(e));\r\n        }\r\n    };\r\n\r\n    siparisSilIptal = () => {\r\n        this.setState({siparisSilToggle: false, silinecekSiparis: null});\r\n    };\r\n\r\n    render() {\r\n\r\n        const { siparisler, sayfa } = this.props;\r\n        const { silinecekSiparis, siparisSilToggle } = this.state;\r\n\r\n        const toplamSiparisMiktari = () => {\r\n            let m = 0;\r\n            if(siparisler.length)\r\n                for (const siparis of siparisler){ m += siparis.toplamFiyat }\r\n            return m;\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <div className={\"siparisListe\"}>\r\n                    <Table stickyHeader>\r\n                        <TableHead className={\"siparisListeHead\"}>\r\n                            <TableRow>\r\n                                <TableCell>Ad Soyad</TableCell>\r\n                                <TableCell>Tel. No.</TableCell>\r\n                                <TableCell>Açıklama</TableCell>\r\n                                <TableCell>Kargo Adresi</TableCell>\r\n                                <TableCell>Toplam Fiyat</TableCell>\r\n                                <TableCell>Eklenme Tarihi</TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody className={\"siparisListeBody\"}>\r\n                            <PoseGroup preEnterPose={\"init\"}>\r\n                                {\r\n                                    siparisler.length && (\r\n                                        siparisler.sort((a,b) => {\r\n                                            const aDate = new Date(a.eklenmeTarihi);\r\n                                            const bDate = new Date(b.eklenmeTarihi);\r\n                                            return bDate - aDate;\r\n                                        })\r\n                                            .map((siparis,i) => {\r\n\r\n                                                let eklenmeTarihi = new Date(siparis.eklenmeTarihi);\r\n                                                let eklenmeZaman = eklenmeTarihi.toLocaleTimeString(\"tr\");\r\n                                                eklenmeTarihi = eklenmeTarihi.toLocaleDateString(\"tr\", { day:\"numeric\", month:\"long\", year: \"numeric\" });\r\n                                                return(\r\n                                                    <SiparisRow key={i}>\r\n                                                        <TableCell className={\"adSoyad\"}>{siparis.adSoyad}</TableCell>\r\n                                                        <TableCell className={\"telNo\"}>{siparis.telNo}</TableCell>\r\n                                                        <TableCell className={\"aciklama\"}>{siparis.aciklama}</TableCell>\r\n                                                        <TableCell className={\"kargoAdresi\"}>{siparis.kargoAdresi}</TableCell>\r\n                                                        <TableCell className={\"toplamFiyat\"}><b>{siparis.toplamFiyat.toLocaleString(\"tr\", { minimumFractionDigits:2, maximumFractionDigits:2 })} <i className={\"fa fa-turkish-lira\"} /></b></TableCell>\r\n                                                        <TableCell className={\"eklenmeTarihi\"}>{eklenmeZaman} <br/> {eklenmeTarihi}</TableCell>\r\n                                                        <TableCell className={\"sil\"}><Button onClick={() => this.siparisSil(i)} color={\"secondary\"}><i className={\"fa fa-trash\"}/>&nbsp;Sil</Button></TableCell>\r\n                                                    </SiparisRow>\r\n                                                )\r\n                                            })\r\n                                    )\r\n                                }\r\n                            </PoseGroup>\r\n                        </TableBody>\r\n                        <TableFooter className={\"siparisListeFooter\"}>\r\n                            {\r\n                                sayfa ?\r\n                                    <Link to={\"/\"} className={\"tumSiparisleriGoster\"}>\r\n                                        <i className={\"fa fa-home\"} />&nbsp;Anasayfa\r\n                                    </Link>\r\n                                    :\r\n                                    <Link to={\"/siparisler\"} className={\"tumSiparisleriGoster\"}>\r\n                                        <i className={\"fa fa-list\"} />&nbsp;Tüm Siparişleri Göster\r\n                                    </Link>\r\n                            }\r\n\r\n                            <span className={\"siparisListeToplamlar\"}>\r\n                                Toplam Sipariş Sayısı: <b>{ siparisler.length }</b>\r\n                            </span>\r\n                            <span className={\"siparisListeToplamlar\"}>\r\n                                Toplam Sipariş Miktarı: <b>{ toplamSiparisMiktari().toLocaleString(\"tr\", { maximumFractionDigits:2, minimumFractionDigits:2 }) }&nbsp;<i className={\"fa fa-turkish-lira\"} /></b>\r\n                            </span>\r\n                        </TableFooter>\r\n                    </Table>\r\n                    {\r\n                        !siparisler.length &&\r\n                        <h2 key={\"siparisBulunamadı\"} className={\"siparisBulunamadı\"}>Sipariş bulunamadı1</h2>\r\n                    }\r\n                </div>\r\n\r\n                <PoseGroup>\r\n                    {\r\n                        siparisSilToggle && silinecekSiparis &&\r\n                            <SiparisSilModalContainer\r\n                                key={silinecekSiparis.ID}\r\n                                className={\"siparisSilModalContainer\"}\r\n                                onClick={e => {\r\n                                    if(e.currentTarget === e.target){\r\n                                        this.siparisSilIptal();\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <SiparisSilModal key={silinecekSiparis.ID+\"modal\"} className={\"siparisSilModal\"}>\r\n                                    <h3>{silinecekSiparis.adSoyad} adlı kişi/kuruluş'a ait Sipariş silinsin mi?</h3>\r\n                                    <p><b>Sipariş Açıklaması:</b><br/> {silinecekSiparis.aciklama}</p>\r\n                                    <Button color={\"primary\"} onClick={this.siparisSilIptal}><i className={\"fa fa-close\"} />&nbsp;İptal</Button>\r\n                                    <Button color={\"secondary\"} onClick={() => this.siparisSil(null)}><i className={\"fa fa-check\"} />&nbsp;Sil</Button>\r\n                                </SiparisSilModal>\r\n                            </SiparisSilModalContainer>\r\n                    }\r\n                </PoseGroup>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SiparisListe;\r\n\r\nconst SiparisRow = posed.tr({\r\n    init: {\r\n        opacity:0,\r\n    },\r\n    enter: {\r\n        opacity:1,\r\n    },\r\n    exit: {\r\n        opacity:0,\r\n    }\r\n});\r\n\r\nconst SiparisSilModalContainer = posed.span({\r\n    enter: {\r\n        opacity:1,\r\n        beforeChildren: true\r\n    },\r\n    exit: {\r\n        opacity:0,\r\n    }\r\n});\r\n\r\nconst SiparisSilModal = posed.span({\r\n    enter: {\r\n        scale:1,\r\n    },\r\n    exit: {\r\n        scale:0,\r\n    }\r\n});","import React, {Component} from 'react';\r\nimport sessionKontrol from \"../helpers/sessionKontrol\";\r\nimport axios from \"axios\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SiparisEkle from \"../Components/SiparisEkle\";\r\nimport SiparisListe from \"../Components/SiparisListe\";\r\n\r\nclass Anasayfa extends React.Component{\r\n\r\n    state = {\r\n        siparisler: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        sessionKontrol()\r\n            .then(data => {\r\n                console.log({data});\r\n                this.siparisleriCek();\r\n                document.title = \"Kupa Sipariş Listem\";\r\n            })\r\n            .catch(e => this.props.history.push(\"/giris\"));\r\n    }\r\n\r\n    siparisleriCek = async() => {\r\n        try{\r\n            const {data:siparisler} = await axios({ url:\"/api/siparis\", method:\"get\" });\r\n            this.setState({ siparisler });\r\n        }catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    siparisEkle = async siparis => {\r\n        try{\r\n            await sessionKontrol();\r\n            const {data:siparisEkle} = await axios({ url:\"/api/siparis/ekle\", method:\"post\", data:siparis });\r\n            this.siparisleriCek();\r\n        }catch (e) {\r\n            console.error(e);\r\n            this.props.history.push(\"/giris\")\r\n        }\r\n    };\r\n\r\n    cikis = async() => {\r\n        try{\r\n            await axios({ url: \"/api/cikis\", method:\"post\" });\r\n            this.props.history.push(\"/giris\");\r\n        }catch (e) {\r\n            console.error(e);\r\n            window.location.reload(true);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className={\"baslik\"}>\r\n                    <h3><i className={\"fa fa-list\"}/> SİPARİŞ LİSTEM</h3>\r\n                    <Button\r\n                        onClick={this.cikis}\r\n                        //variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        <i className={\"fa fa-sign-out\"}/>&nbsp;Çıkış\r\n                    </Button>\r\n                </div>\r\n                <SiparisEkle siparisEkle={this.siparisEkle} />\r\n                <SiparisListe siparisler={this.state.siparisler} siparisleriCek={this.siparisleriCek} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Anasayfa;","import React, {Component} from 'react';\r\nimport sessionKontrol from \"../helpers/sessionKontrol\";\r\nimport axios from \"axios\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\n\r\nclass Giris extends React.Component{\r\n\r\n    componentDidMount() {\r\n        sessionKontrol()\r\n            .then(data => {\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch(e => {});\r\n        document.title = \"Giriş - Kupa Sipariş Listem\";\r\n    }\r\n\r\n    girisYap = async bilgiler => {\r\n        try{\r\n            const {data:siparisEkle} = await axios({ url:\"/api/giris\", method:\"post\", data:bilgiler });\r\n            this.props.history.push(\"/\");\r\n        }catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className={\"girisYap\"}>\r\n                <Formik\r\n                    initialValues={{\r\n                        kullaniciAdi:\"\",\r\n                        kullaniciSifre:\"\"\r\n                    }}\r\n                    validationSchema={() => Yup.object().shape({\r\n                        kullaniciAdi: Yup.string().required(\"Kullanıcı adınızı girin!\"),\r\n                        kullaniciSifre: Yup.string().required(\"Şifrenizi girin!\")\r\n                    })}\r\n                    onSubmit={values => this.girisYap(values)}\r\n                >\r\n                    {({values, handleChange, handleSubmit, errors, touched, setFieldTouched}) =>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <h3><i className={\"fa fa-user\"}/> Giriş Yap</h3>\r\n                            {\r\n                                errors.kullaniciAdi && touched.kullaniciAdi &&\r\n                                <span className=\"girisUyari\">{errors.kullaniciAdi}</span>\r\n                            }\r\n                            <TextField\r\n                                style={{ flex:1 }}\r\n                                className={\"girisInput\"}\r\n                                label=\"Kullanıcı Adı\"\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange('kullaniciAdi')}\r\n                            />\r\n                            {\r\n                                errors.kullaniciSifre && touched.kullaniciSifre &&\r\n                                <span className=\"girisUyari\">{errors.kullaniciSifre}</span>\r\n                            }\r\n                            <TextField\r\n                                style={{ flex:1 }}\r\n                                className={\"girisInput\"}\r\n                                label=\"Şifre\"\r\n                                type={\"password\"}\r\n                                variant=\"outlined\"\r\n                                onChange={handleChange('kullaniciSifre')}\r\n                                onSubmit={handleSubmit}\r\n                                on\r\n                            />\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                style={{ flex:1 }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={\"girisButon\"}\r\n                            >\r\n                                <i className={\"fa fa-sign-in\"} />&nbsp;Giriş\r\n                            </Button>\r\n                        </form>\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Giris;","import React, {Component} from 'react';\r\nimport sessionKontrol from \"../helpers/sessionKontrol\";\r\nimport axios from \"axios\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport SiparisEkle from \"../Components/SiparisEkle\";\r\nimport SiparisListe from \"../Components/SiparisListe\";\r\n\r\nclass Siparisler extends Component {\r\n\r\n    state = {\r\n        siparisler: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        sessionKontrol()\r\n            .then(data => {\r\n                console.log({data});\r\n                this.siparisleriCek();\r\n                document.title = \"Siparişler - Kupa Sipariş Listem\";\r\n            })\r\n            .catch(e => this.props.history.push(\"/giris\"));\r\n    }\r\n\r\n    siparisleriCek = async() => {\r\n        try{\r\n            const {data:siparisler} = await axios({ url:\"/api/siparis\", method:\"get\" });\r\n            this.setState({ siparisler });\r\n        }catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n\r\n    cikis = async() => {\r\n        try{\r\n            await axios({ url: \"/api/cikis\", method:\"post\" });\r\n            this.props.history.push(\"/giris\");\r\n        }catch (e) {\r\n            console.error(e);\r\n            window.location.reload(true);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={\"baslik\"}>\r\n                    <h3><i className={\"fa fa-list\"}/> SİPARİŞ LİSTEM</h3>\r\n                    <Button\r\n                        onClick={this.cikis}\r\n                        //variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        <i className={\"fa fa-sign-out\"}/>&nbsp;Çıkış\r\n                    </Button>\r\n                </div>\r\n                <SiparisListe sayfa siparisler={this.state.siparisler} siparisleriCek={this.siparisleriCek} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Siparisler;","import React from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { Card, Button } from \"@material-ui/core\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport posed, {PoseGroup} from \"react-pose\";\nimport sessionKontrol from \"./helpers/sessionKontrol\";\n\n// sayfalar\nimport Anasayfa from \"./Sayfalar/Anasayfa\";\nimport Giris from \"./Sayfalar/Giris\";\nimport Siparisler from \"./Sayfalar/Siparisler\";\n\nclass App extends React.Component{\n\n    state = {\n        yuklendi: false,\n    };\n\n    componentDidMount() {\n\n    };\n\n    render(){\n\n        const { baslik } = this.state;\n\n        return (\n                <Card className={\"container\"}>\n                    <Route render={({location}) => (\n                        <PoseGroup>\n                            <RouteContainer className={\"routeContainer\"} key={\"location.key\"}>\n                                <Switch location={location}>\n                                    <Route exact path={\"/\"} key={\"siparisler\"} component={props => <Anasayfa {...props} siparisEkle={this.siparisEkle} />} />\n                                    <Route exact path={\"/giris\"} key={\"giris\"} component={props => <Giris {...props} girisYap={this.girisYap} />} />\n                                    <Route exact path={\"/siparisler\"} key={\"giris\"} component={props => <Siparisler {...props} girisYap={this.girisYap} />} />\n                                    <Route render={props => props.history.push(\"/\")} />\n                                </Switch>\n                            </RouteContainer>\n                        </PoseGroup>\n                    )}/>\n                </Card>\n        );\n    }\n}\n\nexport default App;\n\n\nconst RouteContainer = posed.div({\n    enter: { opacity: 1, x:0, delay: 300, beforeChildren: true },\n    exit: { opacity: 0, x:\"-100%\" }\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter>\n    <Route render={props => <App {...props} />} />\n</BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}